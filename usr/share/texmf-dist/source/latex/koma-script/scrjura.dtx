% \CheckSum{1397}
% \iffalse meta-comment
% ======================================================================
% scrjura.dtx
% Copyright (c) Markus Kohm, 2007-2012
%
% This file is part of the LaTeX2e KOMA-Script bundle.
%
% This work may be distributed and/or modified under the conditions of
% the LaTeX Project Public License, version 1.3c of the license.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3c or later is part of all distributions of LaTeX
% version 2005/12/01 or later and of this work.
%
% This work has the LPPL maintenance status "author-maintained".
%
% The Current Maintainer and author of this work is Markus Kohm.
%
% The KOMA-Script bundle consists of all files listed in manifest.txt.
% This work `scrjura' consists of the files `scrjura.dtx' and 
% `scrlogo.dtx'.
% ----------------------------------------------------------------------
% scrjura.dtx
% Copyright (c) Markus Kohm, 2007-2012
%
% Dieses Werk darf nach den Bedingungen der LaTeX Project Public Lizenz,
% Version 1.3c, verteilt und/oder veraendert werden.
% Die neuste Version dieser Lizenz ist
%   http://www.latex-project.org/lppl.txt
% und Version 1.3c ist Teil aller Verteilungen von LaTeX
% Version 2005/12/01 oder spaeter und dieses Werks.
%
% Dieses Werk hat den LPPL-Verwaltungs-Status "author-maintained"
% (allein durch den Autor verwaltet).
%
% Der Aktuelle Verwalter und Autor dieses Werkes ist Markus Kohm.
%
% Das KOMA-Script-Paket besteht aus allen Dateien, die in manifest.txt
% genannt sind.
% Das Werk `scrjura' besteht aus den Dateien `scrjura.dtx' und
% `scrlogo.dtx'.
% ======================================================================
% \fi
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
% \iffalse
%%% From File: scrjura.dtx
%<*dtx>
\def\LaTeXformat{LaTeX2e}
\ifx\fmtname\LaTeXformat\def\MainBodyWork{%
\ProvidesFile{scrjura.dtx}
%</dtx>
%<package>\NeedsTeXFormat{LaTeX2e}[1995/06/01]
%<driver>\ProvidesFile{scrjura.drv}
%<package>\ProvidesPackage{scrjura}
%<*dtx|package|driver>
                [2011/09/30 v0.6 KOMA-Script for jurists
%</dtx|package|driver>
%<driver>                 (driver)%
%<package>                (package)%
%<*dtx>
                 (dtx)%
%</dtx>
%<*dtx|package|driver>
                ]
%</dtx|package|driver>
%<*dtx|driver>
\IfFileExists{scrdoc.cls}{%
  \documentclass[halfparskip-]{scrdoc}
}{%
  \documentclass{ltxdoc}
}
\providecommand*{\DescribeOption}{\DescribeMacro}
\providecommand*{\DescribeCounter}{\DescribeMacro}
\usepackage[latin1]{inputenc}
\usepackage[ngerman]{babel}
\usepackage[T1]{fontenc}
\usepackage{lmodern}
\IfFileExists{scrjura.sty}{%
  \usepackage{scrjura}
}{}
\CodelineIndex
\RecordChanges
\GetFileInfo{scrjura.dtx}
\DocInput{\filename}
\end{document}
%</dtx|driver>
%<*dtx>
}\else\let\MainBodyWork\relax\fi

\MainBodyWork

\def\batchfile{scrjura.dtx}
%</dtx>
%<ins>\def\batchfile{scrjura.ins}
%<*dtx|ins>
\input docstrip.tex

\let\ifbeta=\iffalse

\ifToplevel{\ifx\generate\undefined
    \errhelp{Install a new version of docstrip.}
    \errmessage{Old docstrip in input path}
    \batchmode
    \csname @@end\endcsname
  \fi
  \Msg{************************************************************}
  \Msg{*}
  \Msg{* KOMA-Script}
  \Msg{* a versatile LaTeX2e bundle}
  \Msg{*}
  \Msg{* This is `\batchfile', a batchfile to unpack some or all}
  \Msg{* parts of KOMA-Script. See `liesmich.txt' (german) or}
  \Msg{* `readme.txt' (english) for additional information.}
  \Msg{*}
  \Msg{* If some - maybe old - files of KOMA-Script are already}
  \Msg{* installed, you will be ask, if it is allowed to overwrite}
  \Msg{* them. Answering `yes' doesn't mean, that `\batchfile'}
  \Msg{* WILL overwrite such files. It means only, that}
  \Msg{* `\batchfile' or installation MAY overwrite them.}
  \Msg{*}
  \Msg{************************************************************}
}

% ---------- some docstrip switchs -------------------------------------

\ifToplevel{%
  \keepsilent
  \askforoverwritefalse
  \ifx\askonceonly\undefined\else\askonceonly\fi
}

% ---------- defining preambles ----------------------------------------

\preamble

Copyright (c) 2007-2012
Markus Kohm and any individual authors listed elsewhere in this file.

This file was generated from file(s) of the KOMA-Script bundle.
---------------------------------------------------------------

This work may be distributed and/or modified under the conditions of
the LaTeX Project Public License, version 1.3c of the license.
The latest version of this license is in
  http://www.latex-project.org/lppl.txt
and version 1.3c or later is part of all distributions of LaTeX
version 2005/12/01 or later and of this work.

This work has the LPPL maintenance status "author-maintained".

The Current Maintainer and author of this work is Markus Kohm.

This file may only be distributed together with the files
`scrlogo.dtx' and `scrjura.dtx'. You may however distribute the files
`scrlogo.dtx' and `scrjura.dtx' without this file. 
See also `scrjura.dtx' for additional information.

If this file is a beta version, you are not allowed to distribute it.

Currently there is only a short german manual at `scrjura.dtx', that
should also be found as `scrjura.pdf'.

The KOMA-Script bundle (but maybe not this file) was based upon the
LaTeX2.09 Script family created by Frank Neukam 1993 and the LaTeX2e
standard classes created by The LaTeX3 Project 1994-1996.

\endpreamble

% ---------- File generation -------------------------------------------

\generate{\usepreamble\defaultpreamble
  \file{scrjura.ins}{%
    \from{scrjura.dtx}{ins}%
  }%
%  \file{scrjura.drv}{%
%    \from{scrjura.dtx}{driver}%
%  }%
  \file{scrjura.sty}{%
    \from{scrjura.dtx}{package}%
    \from{scrlogo.dtx}{logo}%
  }%
}%

% ---------- end of docstrip process -----------------------------------

\ifToplevel{%
  \Msg{************************************************************}
  \Msg{*}
  \Msg{* KOMA-Script}
  \Msg{* a versatile LaTeX2e bundle}
  \Msg{*}
  \ifbeta
    \Msg{* THIS IS AN BETA VERSION. YOU SHOULD NOT INSTALL OR USE IT!}
    \Msg{* THERE MAY BE A LOT OF BUGS AT THIS VERSION!}
    \Msg{* PLEASE INSTALL THE RELEASE YOU CAN FIND AT CTAN!}
  \else
    \Msg{* To finish the installation you have to move some}
    \Msg{* files into a directory searched by TeX.}
    \Msg{* See INSTALL.TXT (english) or INSTALLD.TXT (german)}
    \Msg{* from KOMA-Script bundle for additional information.}
    \Msg{*}
    \Msg{* You may also produce the implementation documentation}
    \Msg{* including also a short version of the english manual.}
    \Msg{* To produce it, do}
    \Msg{* \space\space pdflatex scrjura.dtx}
    \Msg{* \space\space mkindex scrjura}
    \Msg{* \space\space pdflatex scrjura.dtx}
    \Msg{* after finishing the installation.}
    \Msg{*}
    \Msg{* Happy TeXing}
  \fi
  \Msg{*}
  \Msg{************************************************************}
}

\bye
%</dtx|ins>
% \fi
%
% \title{\KOMAScript{} \partname\ \texttt{\filename}%
%   \thanks{Diese Datei ist Version \fileversion\ von \texttt{\filename}.}}
% \date{\filedate}
% \author{Markus Kohm\thanks{Paketautor, mailto:komascript(at)gmx.info}\and
%   Dr.\,Alexander
% Willand\thanks{Autor der Anleitung, mailto:alexander.willand(klammeraffe)t-online.de}}
% \begin{document}
% \maketitle
% \begin{abstract}
%   Das scrjura-Paket ist für die Kautelarjurisprudenz gedacht.  Es soll für
%   Anwälte und Notare eine flexible Hilfe bei der Abfassung von Verträgen,
%   Satzungen und juristischen Kommentaren bieten.  Es ist in Zusammenarbeit
%   mit Dr.\,Alexander Willand entstanden, bzw. noch immer in Entstehung
%   begriffen.
% \end{abstract}
%
% \tableofcontents
% 
% \section{Rechtlicher Hinweis}
% Dieser Teil von \KOMAScript{} darf ohne die restlichen Teile von
% \KOMAScript{} verteilt werden. Dazu dürfen die Dateien
% »\texttt{scrlogo.dtx}« und »\texttt{scrjura.dtx}« unter den Bedingungen der
% \LaTeX{} Project Public License, wahlweise Version 1.3c oder (nach Ihrer
% Entscheidung) jede spätere Version, verteilt und verändert werden. Die
% aktuelle Version dieser Lizenz ist unter
% \mbox{http://www.latex-project.org/lppl.txt} zu finden und Version~1.3c oder
% neuer ist Teil von \LaTeX{} Version 2005/12/01 oder neuer. Es ist nicht
% gestattet die Datei »\texttt{scrjura.dtx}« ohne die Datei
% »\texttt{scrlogo.dtx}« zu verteilen. Eine Verteilung ist nur zusammen
% gestattet.
%
% Zu \KOMAScript{} existiert eine ausführliche Anleitung in Deutsch und
% Englisch. Die Anleitung zum Paket \textsf{scrjura} existiert derzeit jedoch
% nur in dieser deutschen Kurzform.
%
% Das komplette \KOMAScript-Paket ist unter
% CTAN:/\mbox{macros}/""\mbox{latex}/""\mbox{contrib}/""\mbox{koma-script}/ zu
% finden, wobei »CTAN:« ein abkürzendes Synonym für das Verzeichnos
% »tex-archive« jedes CTAN-Servers oder -Spiegels, beispielsweise
% \mbox{ftp://ftp.dante.de/tex-archive/} darstellt. Siehe
% \mbox{http://www.ctan.org} für eine Liste aller CTAN-Server und -Spiegel.
%
% \section{Das Paket »scrjura«}
% \subsection{Überblick}
% Das Paket \textsf{scrjura} ist in erster Linie für den Satz von 
% Verträgen gedacht. 
% Über eine Reihe von Optionen kann die Wirkung des Pakets
% verändert werden. Innerhalb von Verträgen steht eine Reihe von Befehlen zur
% Verfügung. 
% 
% Wer juristische Dokumente verfasst, steht oft unter hohem
% Zeitdruck. Überraschende Fehlermeldungen von \LaTeXe{} kann man da nicht
% brauchen. Erfreulicherweise setzt \textsf{scrjura} lediglich das
% \textsf{scrkbase"=Paket} voraus.
%
% \textsf{scrjura} bietet zwei Modi:
% \begin{enumerate}
% \item den \glqq Vertragsmodus": das gesamte Dokument wird als Vertrag
%   gesetzt;
% \item den \glqq Umgebungsmodus": Nur der Text innerhalb der
%   |contract|"=Umgebung wird als Vertrag gesetzt.
% \end{enumerate}
% Der \emph{Vertragsmodus} wird durch die Option |contract| beim Laden des
% Pakets dauerhaft eingeschaltet.  Also: Mit |\usepackage[contract]{scrjura}|
% wird Text nach |\begin{document}| als Vertrag gesetzt.  Der
% \emph{Umgebungsmodus} wird dagegen wie jede andere Umgebung mit
% |\begin{contract}| begonnen und ist entsprechend mit |\end{contract}| zu
% beenden. Beide Modi können nicht im gleichen Dokument verwendet werden.
%
% Ein Inhaltsverzeichnis wird wie üblich mit |\tableofcontents| erzeugt und
% enthält -- neben etwaigen anderen Überschriften -- auch alle
% Paragraphentitel, sofern \textsf{scrjura} mit der Option |juratotoc| geladen
% wurde. Automatische Kolumnentitel sind ebenfalls möglich.
% 
% Jeder Paragraph hat einen Titel, z.\,B.: |\Paragraph{title=Besitz}|.  Die
% Nummerierung der Paragraphen erfolgt automatisch, kann aber auch manuell
% vorgenommen werden. 
% 
% Nahezu alle vom Anwender anzugebenden Daten folgen dem
% \textit{key=value}"=Schema, wie bereits an dem eben genannten Titel eines
% Paragraphen zu sehen war.
%
% Enthält ein Paragraph mehr als einen Absatz, werden alle Absätze automatisch
% nummeriert.  Die Nummerierung kann fallweise abgeschaltet werden. Es ist
% darüber hinaus möglich, die Sätze eines Absatzes nummerieren zu lassen.
%
% Paragraphen, Absätze und Sätze können referenziert werden. Bei Absätzen
% besteht die Wahl, wie die Ausgabe erfolgt; es ist sowohl möglich,
% beispielsweise "`§ 16 Absatz 3 Satz 1"' als auch "`§ 16 III 1"' als Ausgabe
% zu erhalten.
%
% \textsf{scrjura} unterstützt das |hyperref|"=Paket, ist damit aber hier noch
% nicht ausfürlich getestet worden. Wie immer, wird |hyperref| zuletzt
% geladen. Andernfalls gibt es faszinierende Fehlermeldungen. Wird |hyperref|
% wieder entfernt, muss die *.aux-Datei gelöscht werden.
%
% \subsection{Die Optionen beim Laden des Pakets}
%
% \DescribeOption{contract}%
% Die Option \texttt{contract} sorgt dafür, dass das gesamte Dokument als
% Vertrag interpretiert wird. Innerhalb des Dokuments ist dann keine weitere
% Vertragsumgebung zu verwenden. Dasselbe Verhalten kann erreicht werden,
% indem unmittelbar nach |\begin{document}| eine \texttt{contract}-Umgebung
% begonnen und unmittelbar vor |\end{document}| wieder beendet wird.
%
% \DescribeOption{juratitlepagebreak}%
% Normalerweise sind Seitenumbrüche innerhalb der Überschriften von Paragraphen
% nicht erlaubt. Einige Juristen verwenden aber so lange Überschriften, dass
% selbst Seitenumbrüche darin sinnvoll sein können. Mit der Option
% \texttt{juratitlepagebreak} wird dies ermöglicht. Diese Option kann
% jederzeit mit Hilfe von |\KOMAoptions{juratitlepagebreak}| ein- oder mit
% |\KOMAoptions{juratitlepagebreak=false}| wieder ausgeschaltet werden.
%
% \DescribeOption{juratotoc}%
% \DescribeCounter{juratoclevel}%
% Die Option \texttt{juratotoc} sorgt dafür, dass die Paragraphen in das
% Inhaltsverzeichnis eingetragen werden. Dabei wird in der Voreinstellung die
% Gliederungstiefe~2 für diese Einträge verwendet. Über den Zähler
% |juratoclevel| kann auch eine andere Gliederungstiefe vorgegeben werden. Das
% Paket greift hier auf die Routinen von \LaTeX{} zur Erstellung eines
% Inhaltsverzeichnisses zurück. Bei dreistelligen Paragraphennummern kann im
% Inhaltsverzeichnis die Nummer in den Überschriftstext hineinragen.
% 
% Die einfachste Abhilfe gegen diesen Fehler besteht darin, die Box mit der
% Gliederungsnummer zu verbreitern, beispielsweise mit
% \begin{verbatim}
% \renewcommand{\numberline}[1]{\makebox[6em][l]{#1}}
% \end{verbatim}\vskip-2\parskip
% die Breite der Box den jeweiligen Gegebenheiten anzupassen.
% 
% Eine andere Abhilfe bei der Verwendung einer \KOMAScript"=Klasse besteht
% darin, die Option |tocleft| zu verwenden. Zuletzt kann man
% selbstverständlich auf die verschiedenen Pakete zurückgreifen, mit denen
% sich das Inhaltsverzeichnis anpassen lässt. Den Gewinn an Möglichkeiten
% erkauft man sich allerdings mit einem erhöhten Risiko, dass Fehler
% auftreten.
%
% 
% Ein für den Autor der Anleitung entscheidender Vorteil von \textsf{scrjura}
% liegt in dem umfassenden System, auf andere Klauseln des Vertrages verweisen
% zu können. Beim Laden des Paktes kann per Option entschieden werden, wie die
% Verweise formatiert werden sollen: lang (Bsp: »§ 314 Absatz 2 Satz 2«), kurz
% (»§ 314 Abs. 2 S. 2«) und numerisch (»§ 314 II 2«). Die Optionen hierzu
% lauten:
% \begin{itemize}
%  	\item ref=numeric
% 	\item ref=long
% 	\item ref=short
%  \end{itemize}
%
% Wird nichts angegeben, ist |ref=long| voreingestellt. 
% 
% Wer hier spezifische Wünsche hat, kann die Zitierweise von Absätzen und
% Sätzen bereits bei den Optionen hiervon abweichend festlegen. Es sind
% beliebige Kombinationen von |parlong, parshort, parnumeric, nopar| mit
% |sentenceslong, sentenceshort, sentencesnumeric, nosentence|
% möglich. Beispiel: |\usepackage[ref=parlong,ref=sentenceshort]{scrjura}|.
% Wir haben allerdings diese Kombinationen nicht alle getestet.
% 
% \subsection{Optionen betreffend Kolumnentitel}
%
% Bei langen Verträgen können automatische Kolumnentitel hilfreich
% sein. Allerdings hängt die Ausgabe hier davon ab, wie die diese erzeugt
% werden.  
% \DescribeOption{paragraphmark}%
% \textsf{scrjura} unterstützt lebende Kolumnentitel. Die Option
% \texttt{paragraphmark} kann auf folgende Werte gesetzt werden: 
% \begin{itemize}
%     \item false, off, no
%     \item right
%      \item both
%  \end{itemize}
% 
% 
% Sollte der Vertrag in Abschnitte unterteilt werden, also etwa mit einer Zeile
% |\parnumberfalse\section{ABSCHNITT}\parnumbertrue|, 
% würde auf den ungeraden Seiten die Abschnittsüberschriften und auf den 
% geraden Seiten der Titel des aktuellen Paragraphen angegeben werden. 
% 
% Im übrigen können die zur Gestaltung von Kopfzeilen üblichen Pakete
% (z.B. scrpage2) verwendet werden.
% 
%
%
% \subsection{Der Paragraph}
% \label{sec:paragraph}
% \textsf{scrjura} führt zwei Gliederungsebenen ein: Paragraph und
% Subparagraph.  Selbstverständlich funktioniert deren im folgenden
% beschriebene Befehle im \textit{Umgebungsmodus} nur innerhalb der
% Vertragsumgebung.
% 
% \DescribeMacro{\Paragraph}%
% Für die Paragraphenüberschrift stehen verschiedene optionale Argumente zur
% Verfügung, die ebenfalls in einer durch Kommata zu trennenden
% key=value-Liste angegeben werden:
% 
% \bigskip\renewcommand{\arraystretch}{1.3}
% \begin{tabular}{lp{0.4\linewidth}l}\hline
% Eintrag & Erklärung & Eintrag unterdrücken\\\hline
%  |title = <Titel>| & Titel des Paragraphen & |dummy|\\
%  |head =| \dots & Kolumnentitel des Paragraphen & |nohead|\\
%  |entry =| \dots & Eintrag im Inhaltsverzeichnis& |noentry|\\
%  |number=| \dots & die Paragraphennummer & -\\
% \end{tabular}\bigskip
% 
% Beispiele: |\Paragraph{title=Gattungsschuld, number=244}| gibt "`§ 244
% Gattungsschuld"' aus. |\Paragraph{title=Gattungsschuld}| als erster
% Paragraph gibt "`§ 1 Gattungsschuld"' aus, während |\Paragraph{}| an
% gleicher Stelle zu "`§ 1"' führt, also einer Paragraphenzählung ohne Titel.
% 
% Will man aber beginnend von beispielsweise § 244 an eine Reihe von
% Paragraphen setzen, empfiehlt es sich nicht, die Option |number=| zu
% verwenden, denn die Option lässt den Zähler |Paragraph| unberührt. Will man
% nicht alle Paragraphen per Hand nummerieren, kann mit
% |\setcounter{Paragraph}{243}| der Startpunkt für eine automatische Zählung
% gesetzt werden. Bei |\SubParagraph| ist der Zähler natürlich mit einer
% arabischen Zahl anzugeben, auch wenn die Ausgabe dann in Kleinbuchstaben
% erfolgt.
% 
% 
% \DescribeMacro{\SubParagraph}%
% Sofern ein Paragraph eingeschoben werden soll, kann dieses Makro verwendet
% werden, es verhält sich im übrigen wie |\Paragraph|.  Die Nummerierung fügt
% der zuletzt verwendeten Paragraphennummer einen Kleinbuchstaben hinzu.
% 
% Die Nummerierung für |\SubParagraph| erfolgt in \textsf{scrjura.sty} über
% folgende Definition:
% 
% |\renewcommand*{\thecontractSubParagraph}{%|\\
% |{\theParagraph\alph{contractSubParagraph}}}|
% 
% Wer zwischen Paragraphenzahl und dem Kleinbuchstaben einen Abstand wünscht,
% sowie nach dem Kleinbuchstaben eine runde Klammer, kann in die Präambel also
% einfügen:
% 
% |\renewcommand*{\thecontractSubParagraph}{%|\\
% |{\theParagraph~\alph{contractSubParagraph})}}|.
% 
% \DescribeOption{preskip}%
% \DescribeOption{postskip}%
% Abstände vor und nach der Paragraphen-Überschrift können derzeit über
% |\setkeys{contract}{preskip=|\dots|, postskip=|\dots|}| gesetzt werden.
% 
% Es ist möglich, einen Vertrag in Abschnitte zu unterteilen unter Verwendung
% z.\,B. von |\section{}|. Allerdings muss entweder vorher die
% contract"=Umgebung beendet und danach fortgesetzt werden (die
% Paragraphenzählung wird dadurch nicht zurückgesetzt), oder man setzt davor
% ein |\parnumberfalse| und danach ein |\parnumbertrue|. Vergisst man dies,
% wird der Abschnitt zum ersten als Paragraphenabsatz und dann als Abschnitt
% nummeriert.
% 
%
% \subsection{Verweise}
% \label{sec:referenzierung}
% 
% Verlässlich funktionierende Verweise sind eine große Erleichterung beim
% Abfassen von Verträgen. Wenn in einem ersten Entwurf eines
% Gesellschaftsvertrags die Abfindungsregelungen in §§~28 ff. enthalten sind,
% diese aber nach einigen Umbauten sich irgendwann in §§~19 ff. wiederfinden,
% dann müssen alle Verweise auf die unterschiedlichen Abfindungsregelungen für
% kündigende Gesellschafter, für solche, die in Rente gehen und für
% 'rausgeworfene diese Änderungen nachvollzogen haben.
% 
% In der Grundeinstellung führt der Verweis |\ref{testA}| auf ein
% |\label{testA}|, das in einem Absatz platziert wurde, zur Ausgabe eines
% Vollverweises einschließlich der Satzangabe.
% 
% Nun will man häufig nicht den Paragraph, Absatz \textit{und} Satz, sondern
% nur Paragraph und Absatznummer referenzieren. Die folgende Tabelle enthält
% eine systematische Darstellung aller Verweismöglicheiten. Ein »L«
% kennzeichnet die Langform, ein »S« die Kurzform und ein »N« die nummerische
% Darstellung des Verweises.
% 
% Zunächst das Beispiel, auf das sich die Tabelle bezieht:
% 
% \begin{verbatim}
% \begin{contract}
% \Paragraph{title=Beispiel}
% Es irrt der Mensch.\label{testA}
% \end{contract}
%  \end{verbatim}
%
% Dies ergibt einen sehr kurzen Paragraphen:
% 
% \rule{10cm}{0.4pt}
% 
% \begin{contract}
% \Paragraph{title=Beispiel}
% 
% Es irrt der Mensch.\label{testA}
% 
% \end{contract}
% 
% \rule{10cm}{0.4pt}
% 
% \bigskip
% 
% Folgende Verweise auf diesen § 1 Absatz 1 Satz 1 sind möglich:
%
% \begin{tabular}{ll}
%  Code & Ergebnis \\
%  \hline
%  \verb|\ref{testA}| & \ref{testA} \\
%  \verb|\refL{testA}| & \refL{testA} \\
%  \verb|\refS{testA}| & \refS{testA} \\
%  \verb|\refN{testA}| & \refN{testA} \\
%  \verb|\refParagraph{testA}| & \refParagraph{testA} \\
%  \verb|\refParagraphN{testA}| & \refParagraphN{testA} \\
%  \verb|\refPar{testA}| & \refPar{testA} \\
%  \verb|\refParL{testA}| & \refParL{testA} \\
%  \verb|\refParS{testA}| & \refParS{testA} \\
%  \verb|\refParN{testA}| & \refParN{testA} \\
%  \verb|\refParN[arabic]{testA}| & \refParN[arabic]{testA} \\
%  \verb|\refSentence{testA}| & \refSentence{testA} \\
%  \verb|\refSentenceL{testA}| & \refSentenceL{testA} \\
%  \verb|\refSentenceS{testA}| & \refSentenceS{testA} \\
%  \verb|\refSentenceN{testA}| & \refSentenceN{testA} \\
% \end{tabular}
%
% Dabei hängt die Ausgabe von |\ref|, |\refPar| und |\refSentence| von den
% Einstellungen der Option |ref| ab. Hier zum Vergleich mit der Einstellung
% |\KOMAoptions{ref=nopar}|:
%
% \begingroup\KOMAoptions{ref=nopar}
% \begin{tabular}{ll}
%  Code & Ergebnis \\
%  \hline
%  \verb|\ref{testA}| & \ref{testA} \\
%  \verb|\refPar{testA}| & \refPar{testA} \\
%  \verb|\refSentence{testA}| & \refSentence{testA} \\
% \end{tabular}
% \endgroup
%
% Das gleiche mit |\KOMAoptions{ref=nosentence}|:
%
% \begingroup\KOMAoptions{ref=nosentence}
% \begin{tabular}{ll}
%  Code & Ergebnis \\
%  \hline
%  \verb|\ref{testA}| & \ref{testA} \\
%  \verb|\refPar{testA}| & \refPar{testA} \\
%  \verb|\refSentence{testA}| & \refSentence{testA} \\
% \end{tabular}
% \endgroup
%
% Das gleiche mit |\KOMAoption{ref}{nopar,nosentence}|:
%
% \begingroup\KOMAoption{ref}{nopar,nosentence}
% \begin{tabular}{ll}
%  Code & Ergebnis \\
%  \hline
%  \verb|\ref{testA}| & \ref{testA} \\
%  \verb|\refPar{testA}| & \refPar{testA} \\
%  \verb|\refSentence{testA}| & \refSentence{testA} \\
% \end{tabular}
% \endgroup
%
% 
% Zu jeder  existiert noch eine Stern"=Version, also z.B.
% |\ref*{testA}|. Wenn das Paket |hyperref| geladen ist, erzeugt 
% die besternte Version einen Verweis, der \textit{kein} Hyperlink ist. 
% Wenn das Paket jedoch nicht geladen wurde, erzeugt die besternte Version
% -- Fehler.
% 
%
% \subsection{Absatz- und Satznummerierung}
% \label{sec:abs-u-satznummerierung}
% \DescribeMacro{\parnumbertrue}%
% \DescribeMacro{\parnumberfalse}%
% Absätze in Paragraphen werden automatisch nummeriert. Mit |\parnumberfalse|
% kann die Nummerierung ab- und mit |\parnumbertrue| wieder eingeschaltet
% werden.
%
% \DescribeMacro{\Sentence} Auch alle einzelnen Sätze eines Absatzes können
% durch eine hochgestellte Ziffer nummeriert werden. Allerdings kann dies
% nicht automatisch geschehen. Am einfachsten gestaltet sich die
% Satznummerierung unter Zuhilfenahme des Befehls |\useshorthands| aus dem
% ohnehin bei deutschen Texten notwendigen babel"=Paket:
% 
% \begin{verbatim}
% \usepackage[...]{babel}
% \useshorthands{'}
% \defineshorthand{'S}{\Sentence\ignorespaces}
% \defineshorthand{'.}{. \Sentence\ignorespaces}
% \end{verbatim}
% 
% Die Sätze lassen sich mit einem vorangestellten |'S| nummerieren. Alternativ
% kann der Satzendepunkt apostrophiert gesetzt werden: |'.|, damit wird dann
% der nächste Satz nummeriert.
% % 
% \subsection{kile anpassen, \textsf{scrjura} unter lyx}
% Bei langen Verträgen ist es sehr hilfreich, die Gliederung und die
% Paragraphentitel auf dem Bildschirm einblenden zu können. Wer kile als
% Editor verwendet, der kann sich -- Open Source sei Dank! -- selbst
% helfen. Bei Version 2.0.0 von kile genügt es, in der Datei
% |kiledocumentinfo.cpp| an geeigneter Stelle zwei Zeilen (jeweils ohne Zeilenumbruch) einzufügen:
% \begin{verbatim}
% m_dictStructLevel["\\Paragraph"]=
% KileStructData(5, KileStruct::Sect, "Paragraph");
% 
% m_dictStructLevel["\\SubParagraph"]=
% KileStructData(6, KileStruct::Sect, "SubParagraph");
% \end{verbatim}
% 
%
% 
% Zahlen über 7 sind eine schlechte Idee. Nach dem Speichern der Datei folgt
% der übliche Dreisprung: configure, make, make install (oder checkinstall
% \dots). kile zeigt danach Paragraphen und »Unterparagraphen« als
% Dokumentenstruktur an. Vielleicht findet ein Anwender ja heraus, wie dies
% mit \TeX nicCenter zu bewerkstelligen ist.
% 
% Bis jemand für die Verwendung von \textsf{scrjura} eine lyx-Klasse schreibt, wozu wir ausdrücklich ermutigen wollen,
% kann man sich bei der Nutzung von lyx damit behelfen, im sog. »\LaTeX"=Vorspann«
% beispielsweise die Definition des Unterunterabschnitts anzupassen:
% 
% |\renewcommand{\subsubsection}[1]{\Paragraph{title= #1}}|
% 
% Damit lassen sich Paragraphenüberschriften in lyx als Unterunterabschnittsüberschriften 
% setzen. Da die Absätze von Verträgen ohnehin von \textsf{scrjura} automatisch nummeriert werden,
% zeigen sich die Nachteile dieses Vorgehens erst, wenn man einen Unterunterabschnitt benötigt.
% 
% 
% 
% 
% \subsection{Sonstiges}
%\label{sec:else}
% 
% 
% \DescribeMacro{\parname}%
% \DescribeMacro{\sentencename}%
% Sprachabhängiger Name von Absatz und Satz.
%
% \DescribeMacro{\thecontractParagraph}%
% \DescribeMacro{\thecontractSubParagraph}%
% Ausgabe der automatischen Zähler für Paragraph und eingeschobener Paragraph
% bei Verträgen.
%
% \DescribeMacro{\AutoPar}%
% \DescribeMacro{\ManualPar}%
% \DescribeMacro{\Par}%
% Automatische und manuelle Absatznummerierung.
%
%
% \DescribeMacro{\ifparnumber}%
% \DescribeMacro{\parnumbertrue}%
% \DescribeMacro{\parnumberfalse}%
% Absatznummern ein- und ausschalten.
%
% \DescribeCounter{par}%
% \DescribeMacro{\thepar}%
% \DescribeMacro{\parformat}%
% \DescribeMacro{\parciteformat}%
% Zähler für die Absatznummern und dessen Ausgabe und Formatierung und
% Formatierung der Referenz. ACHTUNG: |\thepar| muss bei unverändertem
% |\parciteformat| eine arabische Zahl sein!
%
% \DescribeMacro{\refParagraph}%
% So etwas wie |\ref| nur für den Paragraphen.
%
% \DescribeMacro{\refPar}%
% So etwas wie |\ref| nur für den Absatz.
%
% \DescribeMacro{\refSentence}%
% So etwas wie |\ref| nur für den Satz.
%
% \DescribeCounter{sentence}%
% \DescribeMacro{\thesentence}%
% \DescribeMacro{\sentenceciteformat}%
% Zähler für die Satznummer und dessen Ausgabe, sowie Formatierung der
% Referenz. ACHTUNG: |\thesentence| muss bei unverändertem
% |\sentenceciteformat| eine arabische Zahl sein!
% 
% \DescribeMacro{\newmaxpar}%
% \DescribeMacro{\getmaxpar}%
% Werden intern verwendet und müssen deshalb allenfalls für Paketautoren
% dokumentiert werden.
%
% \section{Bekannte Probleme}
%
% Die Verweistechnik wurde noch nicht ausführlich getestet; Fehler sind
% möglich. 
%
%
% \StopEventually{\PrintIndex\PrintChanges}
%
% \section{Implementierung}
%
% \iffalse
%<*package>
% \fi
%
%    \begin{macrocode}
\@ifpackageloaded{hyperref}{%
  \PackageError{scrjura}{Package hyperref already loaded}{%
    If you want to use package scrjura with package hyperref, you have to
    use\MessageBreak
    package scrjura before package hyperref.\MessageBreak
    To solve the problem, you just should move the loading of package
    hyperref\MessageBreak
    behind the loading of package scrjura.}%
}
%    \end{macrocode}
%
% Es wird das Paket \textsf{scrkbase} benötigt, weil alles weitere darauf
% aufbaut.
%    \begin{macrocode}
\RequirePackage{scrkbase}
%    \end{macrocode}
%
% \begin{option}{contract}
%   Mit der Option |contract| wird das gesamte Dokument zu einem Vertrag. Man
%   darf dann keine der von diesem Paket bereit gestellten Umgebungen mehr
%   innerhalb des Dokuments verwenden! Realisiert wird dies, indem ganz am
%   Ende von |\begin{document}| noch |\contract| ausgeführt wird.
%    \begin{macrocode}
\DeclareOption{contract}{%
  \g@addto@macro\document\contract%
}
%    \end{macrocode}
% \end{option}
%
% \begin{option}{juratotoc}
%   Mit dieser Option wird der Schalter |\if@juratotoc| auf |\iftrue| gesetzt.
% \begin{macro}{\if@juratotoc}
%   \changes{v0.6}{2011/09/29}{Schalter durch Zähler überflüssig}
% \begin{Counter}{juratoclevel}
%   \changes{v0.6}{2011/09/29}{Zählerdefinition verschoben}
%   Mit dem Zähler wiederum wird erreicht, dass Paragraphen in das
%   Inhaltsverzeichnis aufgenommen werden.
%    \begin{macrocode}
\newcounter{juratoclevel}\setcounter{juratoclevel}{\@M}
\KOMA@key{juratotoc}[true]{%
  \begingroup
    \newif\if@setjuratoclevel\@setjuratocleveltrue
    \let\juratoclevel@@FamilyUnknownKeyValue\FamilyUnknownKeyValue
    \renewcommand*{\FamilyUnknownKeyValue}[4]{%
      \setcounter{juratoclevel}{#1}%
      \@setjuratoclevelfalse
    }%
    \KOMA@set@ifkey{juratoclevel}{@tempswa}{#1}%
    \if@setjuratoclevel
      \if@tempswa
        \setcounter{juratoclevel}{2}%
      \else
        \setcounter{juratoclevel}{\@M}%
      \fi
    \fi
  \endgroup
}
%    \end{macrocode}
% \end{Counter}
% \end{macro}
% \end{option}
%
% \begin{option}{juratocnumberwidth}
%   \changes{v0.6}{2011/09/29}{neu}
% \begin{option}{juratocindent}
%   \changes{v0.6}{2011/09/29}{neu}
% \begin{macro}{\cpar@numberwidth}
%   \changes{v0.6}{2011/09/29}{neu (intern)}
% \begin{macro}{\cpar@indent}
%   \changes{v0.6}{2011/09/29}{neu (intern)}
% Der Einzug und die Breite der Nummer für Inhaltsverzeichniseinträge kann
% über diese beiden Optionen bzw. Makros bestimmt werden.
%    \begin{macrocode}
\newcommand*{\cpar@numberwidth}{2em}
\newcommand*{\cpar@indent}{1.5em}
\KOMA@key{juratocnumberwidth}{%
  \begingroup\setlength{\@tempdima}{#1}\endgroup
  \renewcommand*{\cpar@numberwidth}{#1}%
}
\KOMA@key{juratocindent}{%
  \begingroup\setlength{\@tempdima}{#1}\endgroup
  \renewcommand*{\cpar@indent}{#1}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{option}
% \end{option}
%
% \begin{option}{juratitlepagebreak}
%   \changes{v0.5b}{2010/04/05}{neue Option}
%   Mit dieser Option wird der Schalter |\if@juratitlepagebreak| auf |\iftrue|
%   gesetzt.
% \begin{macro}{\if@juratitlepagebreak}
%   Mit diesem Schalter wiederum wird erreicht, dass in den Überschriften von
%   Paragraphen ein Seitenumbruch erlaubt wird.
%    \begin{macrocode}
\KOMA@ifkey{juratitlepagebreak}{@juratitlepagebreak}
%    \end{macrocode}
% \end{macro}
% \end{option}
%
% \begin{option}{parnumber}
%   \changes{v0.6}{2011/09/29}{neue Option}
%   Die (automatische) Absatznummerierung lässt sich nun auch per Option ein-
%   und ausschalten.
%    \begin{macrocode}
\newif\ifparnumber
\KOMA@key{parnumber}[true]{%
  \ifstr{#1}{auto}{\AutoPar}{%
    \ifstr{#1}{manual}{\ManualPar}{%
      \def\FamilyElseValue{, `auto', `semi'}%
      \KOMA@set@ifkey{parnumber}{parnumber}{#1}%
    }%
  }%
}
%    \end{macrocode}
% \end{option}
%
% \begin{option}{paragraphmark}
% \begin{option}{markright}
% \begin{option}{markboth}
% \begin{macro}{\Paragraphmark}
%   \changes{v0.5e}{2011/08/31}{Beachtung von \cs{MakeMarkcase}}
%   Mit diesen Optionen wird |\Paragraphmark| so umdefiniert, dass es entweder
%   ein |\markright| oder ein |\markboth| ausführt. Im Gegensatz zu
%   |\chaptermark| etc. erwartet |\Paragraphmark| neben dem Titel auch noch
%   die zu verwendende Nummer (das könnte bei Bedarf noch geändert werden!)
%    \begin{macrocode}
\newcommand*{\Paragraphmark}[1]{}
\KOMA@key{paragraphmark}{%
  \begingroup
    \KOMA@set@ncmdkey{paragraphmark}{@tempa}{%
      {false}{0},{off}{0},{no}{0},%
      {forceright}{1},%
      {forceboth}{2},%
      {right}{3},%
      {both}{4}%
    }{#1}%
  \ifcase\number\@tempa
    \endgroup
    \let\Paragraphmark\@gobble
  \or
    \endgroup
    \renewcommand*{\Paragraphmark}[1]{%
      \markright{\csname MakeMarkcase\endcsname{##1}}}%
  \or
    \endgroup
    \renewcommand*{\Paragraphmark}[1]{%
      \markboth{\csname MakeMarkcase\endcsname{##1}}%
               {\csname MakeMarkcase\endcsname{##1}}}%
  \or
    \endgroup
    \renewcommand*{\Paragraphmark}[1]{%
      \ifx
        \@mkboth\@gobbletwo
      \else
        \markright{\csname MakeMarkcase\endcsname{##1}}%
      \fi}%
  \or
    \endgroup
    \renewcommand*{\Paragraphmark}[1]{%
      \@mkboth{\csname MakeMarkcase\endcsname{##1}}%
              {\csname MakeMarkcase\endcsname{##1}}}%
  \else
    \endgroup
  \fi
}
\KOMA@DeclareDeprecatedOption[scrjura]{markright}{paragraphmark=forceright}
\KOMA@DeclareDeprecatedOption[scrjura]{markboth}{paragraphmark=forceboth}
%    \end{macrocode}
% \end{macro}
% \end{option}
% \end{option}
% \end{option}
%
% \begin{option}{ref}
%   \changes{v0.5d}{2010/06/07}{neue Einstellungen \texttt{nopar},
%     \texttt{nosentence}, \texttt{OnlyParagraph}}
% \begin{option}{parcitename}
% \begin{option}{sentencecitename}
% Die Form, in der Absätze und Sätze referenziert werden. Es gibt eine lange,
% eine abgekürzte und eine nummerische Form.
%
% \begin{macro}{\parcite@fromat}
% \begin{macro}{\sentencecite@fromat}
% In der Voreinstellung wird das lange Format verwendet. Es gilt:
% 0 = lang, 1 = kurz, 2 = numerisch, -1 = gar nicht
%    \begin{macrocode}
\newcommand*{\parcite@format}{0}
\newcommand*{\sentencecite@format}{0}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% Per Option kann die Voreinstellung verändert werden.
%    \begin{macrocode}
\KOMA@key{ref}{%
  \begingroup
    \KOMA@set@ncmdkey{ref}{@tempa}{%
      {parlong}{1},{longpar}{1},{ParL}{1},%
      {parshort}{2},{shortpar}{2},{ParS}{2},%
      {parnumeric}{3},{numericpar}{3},{ParN}{3},%
      {paroff}{4},{nopar}{4},%
      {sentencelong}{10},{longsentence}{10},{SentenceL}{10},%
      {sentenceshort}{20},{shortsentence}{20},{SentenceS}{20},%
      {sentencenumeric}{30},{numericsentence}{30},{SentenceN}{30},%
      {sentenceoff}{40},{nosentence}{40},%
      {long}{11},%
      {short}{22},%
      {numeric}{33},%
      {paragraphonly}{44},{onlyparagraph}{44},%
      {ParagraphOnly}{44},{OnlyParagraph}{44}%
    }{#1}%
    \@tempcnta=\@tempa\relax
    \@tempcntb=\z@
    \@whilenum \@tempcnta>9 \do{%
      \advance\@tempcnta -10\relax
      \advance\@tempcntb \@ne\relax
    }%
    \ifcase \@tempcnta
    \or
      \aftergroup\def\aftergroup\parcite@format
      \aftergroup{\aftergroup0\aftergroup}%
    \or
      \aftergroup\def\aftergroup\parcite@format
      \aftergroup{\aftergroup1\aftergroup}%
    \or
      \aftergroup\def\aftergroup\parcite@format
      \aftergroup{\aftergroup2\aftergroup}%
    \or
      \aftergroup\def\aftergroup\parcite@format
      \aftergroup{\aftergroup-\aftergroup1\aftergroup}%
    \fi
    \ifcase \@tempcntb
    \or
      \aftergroup\def\aftergroup\sentencecite@format
      \aftergroup{\aftergroup0\aftergroup}%
    \or
      \aftergroup\def\aftergroup\sentencecite@format
      \aftergroup{\aftergroup1\aftergroup}%
    \or
      \aftergroup\def\aftergroup\sentencecite@format
      \aftergroup{\aftergroup2\aftergroup}%
    \or
      \aftergroup\def\aftergroup\sentencecite@format
      \aftergroup{\aftergroup-\aftergroup1\aftergroup}%
    \fi
  \endgroup
}
\KOMA@DeclareDeprecatedOption[scrjura]{parcitename}{ref=parlong}
\KOMA@DeclareDeprecatedOption[scrjura]{sentencecitename}{ref=sentencelong}
%    \end{macrocode}
% \end{option}
% \end{option}
% \end{option}
%
% Optionen ausführen.
%    \begin{macrocode}
\KOMAProcessOptions\relax
%    \end{macrocode}
%
% \begin{macro}{\jura@env@type}
%   \changes{v0.5d}{2010/04/28}{neu (intern)}
% Dieses Makro wird in Abhängigkeit der gerade aktiven
% \textsf{scrjura}-Umgebung definiert.
%    \begin{macrocode}
\newcommand*{\jura@env@type}{}
%    \end{macrocode}
% \end{macro}
%
% \begin{environment}{contract}
% \begin{macro}{\contract}
%   \changes{v0.5d}{2010/04/28}{fehlende Fehlermeldung ergänzt}
%   \changes{v0.5d}{2010/04/28}{Umgebung definiert sich nicht mehr selbst um}
%   \changes{v0.5d}{2010/04/28}{\cs{jura@env@type} wird gesetzt}
% Die Umgebung \texttt{contract} wird als Anweisung \cs{contract}
% definiert. Nichts desto trotz handelt es sich dabei um eine Umgebung und
% sollte sie immer als Umgebung verwendet werden!
% Die Umgebung kann nicht geschachtelt werden. Sie darf aber enden und dann
% erneut verwendet werden. Die Paragraphen werden jedoch über alle Verträge
% hinweg nummeriert. Das Ende eines Vertrags ist also genau genommen nur eine
% Unterbrechung.
%    \begin{macrocode}
\newcommand*{\contract}{%
  \ifx\jura@env@type\@empty
    \let\@doendpe\contract@doendpe
    \let\Paragraph\contract@paragraph
    \let\c@Paragraph\c@contractParagraph
    \edef\cl@Paragraph{\cl@Paragraph\cl@contractParagraph}%
    \let\SubParagraph\contract@subparagraph
    \let\c@SubParagraph\c@contractSubParagraph
    \edef\cl@SubParagraph{\cl@SubParagraph\cl@contractSubParagraph}%
    \let\Par\contract@everypar
    \let\Sentence\contract@sentence
    \renewcommand*{\jura@env@type}{contract}%
    \aliaskomafont{Paragraph}{contract.Paragraph}%
  \else
    \PackageError{contract}{nested `contract' detected}{%
      You may not use a `contract' environment inside\MessageBreak
      a `\jura@env@type' environment or after loading\MessageBreak
      package `scrjura' with option `\jura@env@type'!}%
  \fi
}
\let\if@jura@skiphyperref\iftrue
\let\cl@Paragraph\@empty
\let\cl@SubParagraph\@empty
\newcounter{contractParagraph}
\renewcommand*{\thecontractParagraph}{%
  {\contract@Paragraphformat{\arabic{contractParagraph}}}}
\DeclareRobustCommand*{\contract@Paragraphformat}[1]{\paragraphformat{#1}}
\newcommand*{\paragraphformat}[1]{\S~#1}
\newcounter{contractSubParagraph}
\@addtoreset{SubParagraph}{Paragraph}
\renewcommand*{\thecontractSubParagraph}{%
  {\theParagraph\alph{contractSubParagraph}}}
%    \end{macrocode}
% \end{macro}
% \end{environment}
%
% \begin{macro}{\contract@paragraph}
%   Das ist das Macro, das in Verträgen |\Paragraph| zur Verfügung stellt.
%   Ein Vertrag besteht aus mehreren Paragraphen. Jeder Paragraph hat einige
%   optionale Elemente, die (auf dem Umweg über scrkbase) über das
%   keyval-Paket geregelt werden.
% \begin{option}{title}
% \begin{option}{head}
% \begin{option}{entry}
%   \changes{v0.6}{2011/09/30}{Option veraltet}
% \begin{option}{tocentry}
%   \changes{v0.6}{2011/09/30}{neue Option}
% \begin{option}{nohead}
% \begin{option}{noentry}
%   \changes{v0.6}{2011/09/30}{Option veraltet}
% \begin{option}{notocentry}
%   \changes{v0.6}{2011/09/30}{neue Option}
%   Der Titel, der Kolumnentitel und der Verzeichniseintrag des
%   Paragraphen. Der Titel setzt dabei zunächst auch die anderen beiden. Man
%   kann die beiden aber auf leer setzen. Insbesondere aber kann man sie mit
%   den |no|-Optionen auch abschalten.
%    \begin{macrocode}
\define@key{contract}{title}{%
  \def\contract@title{#1}%
  \ifx\contract@entry\relax\def\contract@entry{\contract@title}\fi
  \ifx\contract@head\relax\def\contract@head{\contract@title}\fi
}
\define@key{contract}{entry}{%
  \PackageWarning{scrjura}{deprecated option `entry'.\MessageBreak
    You should use option `tocentry' instead of\MessageBreak
    option `entry'%
  }%
  \def\contract@entry{#1}}
\define@key{contract}{tocentry}{\def\contract@entry{#1}}
\define@key{contract}{noentry}[]{%
  \PackageWarning{scrjura}{deprecated option `noentry'.\MessageBreak
    You should use option `notocentry' instead of\MessageBreak
    option `noentry'%
  }%
  \let\contract@entry\relax}
\define@key{contract}{notocentry}[]{\let\contract@entry\relax}
\define@key{contract}{head}{\def\contract@head{#1}}
\define@key{contract}{nohead}[]{\let\contract@head\relax}
%    \end{macrocode}
% \end{option}
% \end{option}
% \end{option}
% \end{option}
% \end{option}
% \end{option}
% \end{option}
% \begin{option}{number}
%   Die Nummer kann mit dieser Option frei gestaltet werden. Es sind jedoch
%   keine Paragraphen ohne Nummer erlaubt. Wird keine Nummer angegeben, so
%   wird die Nummer automatisch gesetzt.
%    \begin{macrocode}
\define@key{contract}{number}{\def\contract@number{#1}}
%    \end{macrocode}
% \end{option}
% \begin{macro}{\contract@preskip}
% \begin{macro}{\contract@postskip}
% \begin{option}{preskip}
% \begin{option}{postskip}
%   Über diese beiden Optionen kann der Abstand vor und nach einem Pragraphen
%   gesetzt werden. Wird nichts angegeben, so wird die globale Voreinstellung
%   verwendet, die übrigens mit |\setkeys{contract}{...}| gesetzt werden
%   kann.
%    \begin{macrocode}
\newcommand*{\contract@preskip}{2\baselineskip}
\newcommand*{\contract@postskip}{\baselineskip}
\define@key{contract}{preskip}{\def\contract@preskip{#1}}
\define@key{contract}{postskip}{\def\contract@postskip{#1}}
%    \end{macrocode}
% \end{option}
% \end{option}
% \end{macro}
% \end{macro}
% \begin{option}{dummy}
%   Über dies Option wird der Schalter |\ifcontract@dummy| auf |\iftrue|
%   gesetzt.
% \begin{macro}{\ifcontract@dummy}
%   Ist der Schalter |\iftrue|, dann wird der Paragraph nicht gesetzt. Es ist
%   jedoch darauf zu achten, dass Absätze und Sätze des Paragraphen auf diese
%   Weise nicht entfernt werden können. Werden jedoch Paragraphen gelöscht, so
%   kann man damit das Loch in der Nummerierung erzeugen.
%    \begin{macrocode}
\newif\ifcontract@dummy
\define@key{contract}{dummy}[true]{\csname contract@dummy#1\endcsname}
%    \end{macrocode}
% \end{macro}
% \end{option}
% \begin{macro}{\contract@paragraph@font}
%   Das muss noch auf die Element-Schnittstelle von \KOMAScript{} umgestellt
%   werden!
%    \begin{macrocode}
\newkomafont{contract.Paragraph}{\sffamily\bfseries\large}
\newcommand*{\contract@paragraph@font}{\usekomafont{contract.Paragraph}%
  \@hangfrom}
%    \end{macrocode}
% \end{macro}
% \begin{Counter}{@AbsParagraph}
% \begin{macro}{\theH@AbsParagraph}
% \begin{macro}{\theHParagraph}
% \begin{macro}{\theHSubParagraph}
%    \begin{macrocode}
%   \textsf{hyperref}-Code, der noch nicht getestet ist!
\newcounter{@AbsParagraph}
\newcommand*{\theH@AbsParagraph}{P-\arabic{@AbsParagraph}}
\newcommand*{\theHParagraph}{\theH@AbsParagraph}
\newcommand*{\theHSubParagraph}{\theH@AbsParagraph}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{Counter}
% Zunächst wird vorübergehend auf manuelle Absatznummern umgeschaltet, weil
% natürlich innerhalb der Überschrift keine Nummer gesetzt werden
% soll. Trotzdem werden generell die Absatznummern eingeschaltet. Dann werden
% die Optionen initialisiert und ausgeführt.
%    \begin{macrocode}
\newcommand*{\contract@paragraph}[1]{%
  \ManualPar\parnumbertrue
  \let\contract@title\relax
  \let\contract@entry\relax
  \let\contract@head\relax
  \let\contract@number\relax
  \contract@dummyfalse
  \ifx\relax#1\relax\else\setkeys{contract}{#1}\fi
%    \end{macrocode}
% Wenn es kein Blindparagraph ist, werden Vorbereitung für nach der
% Überschrift getroffen und der vertikale Abstand eingefügt.
%    \begin{macrocode}
  \ifcontract@dummy\else
    \@afterindentfalse
    \addvspace{\contract@preskip}%
  \fi
%    \end{macrocode}
% Wenn die Nummer nicht manuell gesetzt wurde, wird die nächste Nummer
% verwendet. Im anderen Fall muss die Nummer gesetzt und auch dafür gesorgt
% werden, dass sowohl ein Label als auch hyperref diese Nummer verwenden.
%    \begin{macrocode}
  \ifx\contract@number\relax
    \let\p@Paragraph\@empty
    \let\theParagraph\thecontractParagraph
    \refstepcounter{Paragraph}%
  \else
    \begingroup
      \let\@elt\@stpelt
      \cl@Paragraph
    \endgroup
    \protected@edef\theParagraph{\S~\contract@number}%
    \protected@edef\@currentlabel{\theParagraph}%
  \fi
  \stepcounter{@AbsParagraph}%
  \begingroup\expandafter\expandafter\expandafter\endgroup
  \expandafter\ifx\csname if@skiphyperref\endcsname\relax
  \else
    \expandafter\let\csname if@jura@skiphyperref\expandafter\endcsname
    \csname if@skiphyperref\endcsname
  \fi
  \if@jura@skiphyperref\else
    \hyper@refstepcounter{@AbsParagraph}%
    \typeout{absolute Nummer: \the@AbsParagraph^^JLabel: `\@currentHref'}%
  \fi
%    \end{macrocode}
% Zwecks Vereinfachung wird ab hier so getan, als wäre es ein Unterabschnitt.
%    \begin{macrocode}
  \let\theSubParagraph\theParagraph
%    \end{macrocode}
% Außer für Blindparagraphen wird dann die Überschrift gesetzt, die
% Verzeichniseinträge vorgenommen und der Kolumnentitel angepasst.
%    \begin{macrocode}
  \ifcontract@dummy\else
    \begingroup
      \if@juratitlepagebreak\else\interlinepenalty\@M\fi
      \contract@paragraph@font \theParagraph
      \ifx\contract@title\relax\else\enskip\contract@title\fi
      \ifx\contract@entry\relax\else
        \addcontentsline{toc}{cpar}{%
          \protect\numberline{\theParagraph}\contract@entry
        }%
        \addcontentsline{cpa}{cpar}{%
          \protect\numberline{\theParagraph}\contract@entry
        }%
      \fi
      \ifx\contract@head\relax\else
        \expandafter\Paragraphmark\expandafter{%
          \expandafter\theSubParagraph\expandafter\enskip\contract@head}%
      \fi
      \par
    \endgroup\nobreak\vskip\contract@postskip
%    \end{macrocode}
% Zum Schluss wird noch dafür gesorgt, dass auch die Absätze korrekt
% nummeriert werden können etc.
%    \begin{macrocode}
    \jura@afterheading{contract}%
  \fi
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{contract@subparagraph}
% Das entspricht bis auf wenige Kleinigkeiten, die Unterparagraphen betreffen,
% |\contract@paragraph|
%    \begin{macrocode}
\newcommand*{\contract@subparagraph}[1]{%
  \ManualPar\parnumbertrue
  \let\contract@title\relax
  \let\contract@entry\relax
  \let\contract@head\relax
  \let\contract@number\relax
  \contract@dummyfalse
  \ifx\relax#1\relax\else\setkeys{contract}{#1}\fi
  \ifcontract@dummy\else
    \@afterindentfalse
    \vskip\contract@preskip
  \fi
  \ifx\contract@number\relax
    \let\p@SubParagraph\@empty
    \let\theSubParagraph\thecontractSubParagraph
    \refstepcounter{SubParagraph}%
  \else
    \begingroup
      \let\@elt\@stpelt
      \cl@SubParagraph
    \endgroup
    \protected@edef\theSubParagraph{\theParagraph\contract@number}%
    \protected@edef\@currentlabel{\theSubParagraph}%
  \fi
  \stepcounter{@AbsParagraph}%
  \begingroup\expandafter\expandafter\expandafter\endgroup
  \expandafter\ifx\csname if@skiphyperref\endcsname\relax
  \else
    \expandafter\let\csname if@jura@skiphyperref\expandafter\endcsname
    \csname if@skiphyperref\endcsname
  \fi
  \if@jura@skiphyperref\else
    \hyper@refstepcounter{@AbsParagraph}%
    \typeout{absolute Nummer: \the@AbsParagraph^^JLabel: `\@currentHref'}%
  \fi
  \ifcontract@dummy\else
    \begingroup
      \if@juratitlepagebreak\else\interlinepenalty\@M\fi
      \contract@paragraph@font \theSubParagraph
      \ifx\contract@title\relax\else\enskip\contract@title\fi
      \ifx\contract@entry\relax\else
        \addcontentsline{toc}{cpar}{%
          \protect\numberline{\theSubParagraph}\contract@entry
        }%
        \addcontentsline{cpa}{cpar}{%
          \protect\numberline{\theSubParagraph}\contract@entry
        }%
      \fi
      \ifx\contract@head\relax\else
        \expandafter\Paragraphmark\expandafter{%
          \expandafter\theSubParagraph\expandafter\enskip\contract@head}%
      \fi
      \par
    \endgroup
    \nobreak\vskip\contract@postskip
    \jura@afterheading{contract}%
  \fi
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\AutoPar}
% \begin{macro}{\ManualPar}
% Automatische oder manuelle Absatznummern für alle Umgebungen aktivieren.
%    \begin{macrocode}
\newcommand*{\AutoPar}{%
  \expandafter\let\expandafter\jura@everypar
  \csname \jura@type @everypar\endcsname
}
\newcommand*{\ManualPar}{%
  \let\jura@everypar\relax
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\jura@afterheading}
% Entspricht |\afterheading| mit Erweiterungen für automatischen
% Absatznummern.
%    \begin{macrocode}
\newcommand*{\jura@afterheading}[1]{%
  \@nobreaktrue
  \everypar{%
    \if@nobreak
      \@nobreakfalse
      \clubpenalty \@M
      \if@afterindent \else
        {\setbox\z@\lastbox}%
      \fi
    \else
      \clubpenalty \@clubpenalty
      \everypar{%
        \jura@everypar
      }%
    \fi
    \jura@everypar
  }%
  \def\jura@type{#1}%
  \AutoPar
}
%    \end{macrocode}
% \begin{macro}{\jura@everypar}
%   Die Anweisung, die am Anfang von jedem Absatz auszuführen ist, um die
%   Nummer zu setzen. Außerhalb der Umgebungen ist das nichts.
%    \begin{macrocode}
\newcommand*{\jura@everypar}{}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\@doendpe}
% Diese Anweisung wird von \LaTeX{} verwendet, um am Ende von Umgebungen die
% kurz-, mittel- und langwirkenden Absatzaktionen zurückzusetzen. Damit hier
% nicht die automatische Absatznummerierung abgeschaltet wird, wird sie neu
% eingefügt.
%    \begin{macrocode}
\CheckCommand*\@doendpe{\@endpetrue
  \def\par{\@restorepar\everypar{}\par\@endpefalse}\everypar
  {{\setbox\z@\lastbox}\everypar{}\@endpefalse}}
\newcommand*{\contract@doendpe}{%
  \@endpetrue
  \def\par{%
    \@restorepar\everypar{%
      \csname jura@everypar\endcsname
    }%
    \par\@endpefalse
  }%
  \everypar{%
    {\setbox\z@\lastbox}\everypar{%
      \csname jura@everypar\endcsname
    }%
    \@endpefalse
  }%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\l@cpar}
% Verzeichnis-Eintrag für einen Vertrags-Paragraphen.
%    \begin{macrocode}
\newcommand*{\l@cpar}[2]{%
  \ifnum\value{juratoclevel}>\value{tocdepth}\else
    \scr@ifundefinedorrelax{bprot@dottedtocline}{%
      \@dottedtocline
    }{%
      \bprot@dottedtocline
    }{\value{juratoclevel}}{\cpar@indent}{\cpar@numberwidth}{#1}{#2}%
  \fi
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\jura@separator}
% Wird verwendet, damit Leerzeichen am Anfang oder Ende entfernt werden können.
%    \begin{macrocode}
\DeclareRobustCommand*{\jura@separator}[1]{#1}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\jura@usetype}
%   \changes{v0.5d}{2010/04/28}{neu (intern)}
% In der Voreinstellung macht das erst einmal gar nichts, außer dass es robust
% ist und \cs{jura@@usetype} aufruft.
% \begin{macro}{\jura@@usetype}
%   \changes{v0.5d}{2010/04/28}{neu (intern)}
% Das wiederum ist nicht robust und kann dadurch einfacher umdefiniert
% werden. In der Voreinstellung macht das dann wirklich nichts, außer das
% Argument zu fressen.
%    \begin{macrocode}
\DeclareRobustCommand*{\jura@usetype}[1]{\jura@@usetype{#1}}
\newcommand*{\jura@@usetype}[1]{}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\contract@everypar}
% |\jura@everpar| für Verträge.
% \begin{macro}{\ifparnumber}
%   \changes{v0.6}{2011/09/29}{Definition des Schalters in die Definition der
%     Option verschoben}
% \begin{Counter}{par}
% \begin{macro}{\thepar}
% \begin{macro}{\theHpar}
% \begin{macro}{\p@par}
%   \changes{v0.5d}{2010/04/28}{\cs{jura@usetype} mit Argument
%     \cs{jura@env@type} eingefügt}
% Der Schalter gibt an, ob überhaupt mit Absatznummern gearbeitet werden
% soll. Sind Absatznummern deaktiviert, werden auch keine manuellen
% Absatznummern gesetzt. Die Absätze werden dann auch nicht gezählt. Ansonsten
% werden die Absätze mit |\thepar| nummeriert. Wichtig ist, dass der
% Absatzzähler mit den Paragraphen und den Unterparagraphen zurückgesetzt
% wird. Außerdem muss beim Zitieren als Elternobjekt der Paragraph mit
% ausgegeben werden.
%    \begin{macrocode}
\newcounter{par}
\renewcommand*{\thepar}{\arabic{par}}
\newcommand*{\theHpar}{\theH@AbsParagraph-\Roman{par}}
\newcommand*{\parformat}{(\thepar)}
\renewcommand*\p@par{{\jura@usetype{\jura@env@type}\theSubParagraph\jura@separator{\nobreakspace}}}
\@addtoreset{par}{Paragraph}
\@addtoreset{par}{SubParagraph}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{Counter}
% \end{macro}
%   \changes{0.5c}{2010/04/26}{erstes Argument von \cs{newmaxpar} und zweites
%     Argument von \cs{getmaxpar} ist \texttt{contract} nicht
%     \texttt{contractpars}}
%   \changes{0.5c}{2010/04/26}{\cs{contract@Paragraphformat} expandiert beim
%     Schreiben zu seinem Argument}
%    \begin{macrocode}
\newcommand*{\contract@everypar}{%
  \ifparnumber
    \refstepcounter{par}%
    \refstepcounter{sentence}%
    \begingroup
      \protected@write\@auxout{\let\contract@Paragraphformat\@firstofone}{%
        \string\newmaxpar{contract}{\theSubParagraph}{\arabic{par}}}%
      \getmaxpar\@tempa{contract}{\theSubParagraph}%
      \typeout{Stored max is \@tempa}%
      \ifnum \@tempa>\@ne
        \parformat\nobreakspace
      \fi
    \endgroup
  \else
    \setcounter{sentence}{0}\refstepcounter{sentence}%
  \fi
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\refL}
% \begin{macro}{\ref@L}
% Das gleiche wie |\ref| aber zwingend mit der Langform.
%    \begin{macrocode}
\newcommand*{\refL}{\@ifstar {\ref@L*}{\ref@L{}}}
\newcommand*{\ref@L}[2]{%
  \begingroup
    \def\parcite@format{0}%
    \let\sentencecite@format\parcite@format
    \ref#1{#2}%
  \endgroup
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\refS}
% \begin{macro}{\ref@S}
% Das gleiche wie |\ref| aber zwingend mit der Kurzform.
%    \begin{macrocode}
\newcommand*{\refS}{\@ifstar {\ref@S*}{\ref@S{}}}
\newcommand*{\ref@S}[2]{%
  \begingroup
    \def\parcite@format{1}%
    \let\sentencecite@format\parcite@format
    \ref#1{#2}%
  \endgroup
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\refN}
% \begin{macro}{\ref@N}
% Das gleiche wie |\ref| aber zwingend mit der numerischen Form.
%    \begin{macrocode}
\newcommand*{\refN}{\@ifstar {\ref@N*}{\ref@N{}}}
\newcommand*{\ref@N}[2]{%
  \begingroup
    \def\parcite@format{2}%
    \let\sentencecite@format\parcite@format
    \ref#1{#2}%
  \endgroup
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\refParagraph}
% \begin{macro}{\ref@Paragraph}
% Zitiert nur den Paragraphen eines Paragraphen, eines Absatzes oder eines
% Satzes. Für mehr Kompatibilität mit hyperref gibt es mit hyperref auch eine
% Sternform. Ohne hyperref produziert diese nur Unsinn.
%    \begin{macrocode}
\newcommand*{\refParagraph}{%
  \@ifstar {\ref@Paragraph*}{\ref@Paragraph{}}
}
\newcommand*{\ref@Paragraph}[2]{%
  \expandafter\ifx\csname r@#2\endcsname\relax
    \ref#1{#2}%
  \else
    \begingroup
%    \end{macrocode}
% Alle Teile der Referenz bis auf den ersten in |\@tempb| ablegen.
%    \begin{macrocode}
      \expandafter\expandafter\expandafter\expandafter
      \expandafter\expandafter\expandafter\def
      \expandafter\expandafter\expandafter\expandafter
      \expandafter\expandafter\expandafter\@tempb
      \expandafter\expandafter\expandafter\expandafter
      \expandafter\expandafter\expandafter{%
        \expandafter\expandafter\expandafter\@gobble\csname r@#2\endcsname}%
%    \end{macrocode}
% Den ersten Teil der Referenz in |\@tempa| ablegen.
%    \begin{macrocode}
      \def\@tempc##1##2\@nil{##1}%
      \let\jura@separator\@gobble
      \protected@edef\@tempa{\expandafter\expandafter\expandafter\@tempc
        \csname r@#2\endcsname\noexpand\@nil}%
%    \end{macrocode}
% Den ersten Teil von |\@tempa| in |\@tempa| ablegen.
%    \begin{macrocode}
      \protected@edef\@tempa{\expandafter\expandafter\expandafter\@tempc
        \@tempa\@nil}%
      \let\@@protect\protect
      \let\protect\noexpand
      \expandafter\edef\csname r@#2\endcsname{{\@tempa}\@tempb}%
      \let\protect\@@protect
      \ref#1{#2}%
    \endgroup
  \fi
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\refParagraphN}
% \begin{macro}{\ref@ParagraphN}
% Zitiert nur den Paragraphen eines Paragraphen, eines Absatzes oder eines
% Satzes. Für mehr Kompatibilität mit hyperref gibt es mit hyperref auch eine
% Sternform. Ohne hyperref produziert diese nur Unsinn.
%    \begin{macrocode}
\newcommand*{\refParagraphN}{%
  \@ifstar {\ref@ParagraphN*}{\ref@ParagraphN{}}
}
\newcommand*{\ref@ParagraphN}[2]{%
  \begingroup
    \let\paragraphformat\relax
    \ref@Paragraph{#1}{#2}%
  \endgroup
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\refPar}
% \begin{macro}{\ref@Par}
% Zitiert nur den Absatz eines Absatzes oder eines Satzes. Für mehr
% Kompatibilität mit hyperref gibt es mit hyperref auch eine Sternform. Ohne
% hyperref produziert diese nur Unsinn.
%    \begin{macrocode}
\newcommand*{\refPar}{%
  \@ifstar {\ref@Par*}{\ref@Par{}}
}
\newcommand*{\ref@Par}[2]{%
  \expandafter\ifx\csname r@#2\endcsname\relax
    \ref#1{#2}%
  \else
    \begingroup
%    \end{macrocode}
% Alle Teile der Referenz bis auf den ersten in |\@tempb| ablegen.
%    \begin{macrocode}
      \expandafter\expandafter\expandafter\expandafter
      \expandafter\expandafter\expandafter\def
      \expandafter\expandafter\expandafter\expandafter
      \expandafter\expandafter\expandafter\@tempb
      \expandafter\expandafter\expandafter\expandafter
      \expandafter\expandafter\expandafter{%
        \expandafter\expandafter\expandafter\@gobble\csname r@#2\endcsname}%
%    \end{macrocode}
% Den ersten Teil der Referenz in |\@tempa| ablegen.
%    \begin{macrocode}
      \def\@tempc##1##2\@nil{##1}%
      \let\jura@separator\@gobble
      \protected@edef\@tempa{\expandafter\expandafter\expandafter\@tempc
        \csname r@#2\endcsname\noexpand\@nil}%
%    \end{macrocode}
% Den zweiten Teil von |\@tempa| in |\@tempa| ablegen.
%    \begin{macrocode}
      \def\@tempc##1##2##3\@nil{##2}%
      \protected@edef\@tempa{\expandafter\expandafter\expandafter\@tempc
        \@tempa{%
          \protect\G@refundefinedtrue
          \nfss@text{\reset@font\bfseries ??}%
          \@latex@warning{Reference `#2' on page \thepage \space
            with undefined par number}%
        }\noexpand\@nil}%
      \let\@@protect\protect
      \let\protect\noexpand
      \expandafter\edef\csname r@#2\endcsname{{\@tempa}\@tempb}%
      \let\protect\@@protect
      \ref#1{#2}%
    \endgroup
  \fi
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\refParL}
% \begin{macro}{\ref@ParX}
%    \begin{macrocode}
% Das Gleiche zwingend lang.
\newcommand*{\refParL}{%
  \@ifstar {\ref@ParX0*}{\ref@ParX0{}}
}
\newcommand*{\ref@ParX}[3]{%
  \begingroup
    \def\parcite@format{#1}%
    \let\sentencecite@format\parcite@format
    \ref@Par{#2}{#3}%
  \endgroup
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\refParS}
% Das Gleiche zwingend kurz.
%    \begin{macrocode}
\newcommand*{\refParS}{%
  \@ifstar {\ref@ParX1*}{\ref@ParX1{}}
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\refParN}
% Das Gleiche zwingend nummerisch.
%    \begin{macrocode}
\newcommand*{\refParN}{%
  \@ifstar {\ref@ParN2*}{\ref@ParN2{}}
}
\newcommand*{\ref@ParN}[2]{%
  \@ifnextchar [%]
    {\ref@@ParN{#1}{#2}}%
    {\ref@ParX{#1}{#2}}%
}
\newcommand*{\ref@@ParN}{}
\def\ref@@ParN#1#2[#3]#4{%
  \begingroup
    \renewcommand*{\parnumericformat}[1]{%
      \csname @#3\endcsname{\number ##1\relax}%
    }%
    \ref@ParX{#1}{#2}{#4}%
  \endgroup
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\refSentence}
% \begin{macro}{\ref@Sentence}
% Zitiert nur den Satz eines Satzes. Für mehr
% Kompatibilität mit hyperref gibt es mit hyperref auch eine Sternform. Ohne
% hyperref produziert diese nur Unsinn.
%    \begin{macrocode}
\newcommand*{\refSentence}{%
  \@ifstar {\ref@Sentence*}{\ref@Sentence{}}
}
\newcommand*{\ref@Sentence}[2]{%
  \expandafter\ifx\csname r@#2\endcsname\relax
    \ref#1{#2}%
  \else
    \begingroup
%    \end{macrocode}
% Alle Teile der Referenz bis auf den ersten in |\@tempb| ablegen.
%    \begin{macrocode}
      \expandafter\expandafter\expandafter\expandafter
      \expandafter\expandafter\expandafter\def
      \expandafter\expandafter\expandafter\expandafter
      \expandafter\expandafter\expandafter\@tempb
      \expandafter\expandafter\expandafter\expandafter
      \expandafter\expandafter\expandafter{%
        \expandafter\expandafter\expandafter\@gobble\csname r@#2\endcsname}%
%    \end{macrocode}
% Den ersten Teil der Referenz in |\@tempa| ablegen.
%    \begin{macrocode}
      \def\@tempc##1##2\@nil{##1}%
      \let\jura@separator\@gobble
      \protected@edef\@tempa{\expandafter\expandafter\expandafter\@tempc
        \csname r@#2\endcsname\noexpand\@nil}%
%    \end{macrocode}
% Den dritten Teil von |\@tempa| in |\@tempa| ablegen.
%    \begin{macrocode}
      \def\@tempc##1##2##3##4\@nil{##3}%
      \protected@edef\@tempa{\expandafter\expandafter\expandafter\@tempc
        \@tempa{}{%
          \protect\G@refundefinedtrue
          \nfss@text{\reset@font\bfseries ??}%
          \@latex@warning{Reference `#2' on page \thepage \space
            with undefined sentence number}%
        }\noexpand\@nil}%
      \let\@@protect\protect
      \let\protect\noexpand
      \expandafter\edef\csname r@#2\endcsname{{\@tempa}\@tempb}%
      \let\protect\@@protect
      \ref#1{#2}%
    \endgroup
  \fi
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\refSentenceL}
% \begin{macro}{\ref@SentenceX}
%    \begin{macrocode}
% Das Gleiche zwingend lang.
\newcommand*{\refSentenceL}{%
  \@ifstar {\ref@SentenceX0*}{\ref@SentenceX0{}}
}
\newcommand*{\ref@SentenceX}[3]{%
  \begingroup
    \def\parcite@format{#1}%
    \let\sentencecite@format\parcite@format
    \ref@Sentence{#2}{#3}%
  \endgroup
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\refSentenceS}
% Das Gleiche zwingend kurz.
%    \begin{macrocode}
\newcommand*{\refSentenceS}{%
  \@ifstar {\ref@SentenceX1*}{\ref@SentenceX1{}}
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\refSentenceN}
% Das Gleiche zwingend nummerisch.
%    \begin{macrocode}
\newcommand*{\refSentenceN}{%
  \@ifstar {\ref@SentenceX2*}{\ref@SentenceX2{}}
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\contract@sentence}
% Sätze nummerieren.
% \begin{Counter}{sentence}
% \begin{macro}{\thesentence}
% \begin{macro}{\theHsentence}
% \begin{macro}{\p@sentence}
% Der Zähler wird für die Nummerierung der Sätze verwendet. Dabei ist wichtig,
% dass beim Zitieren der Sätze als Elternobjekt der Absatz mit ausgegeben wird.
% \begin{macrocode}
\newcounter{sentence}[par]
\renewcommand*{\thesentence}{\arabic{sentence}}
\newcommand*{\theHsentence}{\theHpar-\arabic{sentence}}
\renewcommand*{\p@sentence}{\expandafter\p@@sentence}
\newcommand*{\p@@sentence}[1]{\p@par{{\par@cite{\thepar}}%
    \jura@separator{\nobreakspace}}{\sentence@cite{#1}}}
\newcommand*{\contract@sentence}{%
  \refstepcounter{sentence}%
  \ensuremath{^{\mbox{\fontsize\sf@size\z@\selectfont\thesentence}}}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{Counter}
% \end{macro}
%
% \begin{macro}{\parciteformat}
%   \changes{v0.5d}{2010/04/28}{Argument verschoben}
% Zitierstil für Absätze.
%    \begin{macrocode}
\DeclareRobustCommand*{\par@cite}[1]{\parciteformat{#1}}
\newcommand*{\parciteformat}[1]{%
  \ifcase \parcite@format
    \expandafter\parlongformat
  \or
    \expandafter\parshortformat
  \or
    \expandafter\parnumericformat
  \else
    \unskip\expandafter\@gobble
  \fi
  {#1}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\sentenceciteformat}
%   \changes{v0.5d}{2010/04/28}{Argument verschoben}
% Zitierstil für Sätze. In der Voreinstellung ist das |\@arabic|.
%    \begin{macrocode}
\DeclareRobustCommand*{\sentence@cite}[1]{\sentenceciteformat{#1}}
\newcommand*{\sentenceciteformat}[1]{%
  \ifcase \sentencecite@format
    \expandafter\sentencelongformat
  \or
    \expandafter\sentenceshortformat
  \or
    \expandafter\sentencenumericformat
  \else
    \unskip\expandafter\@gobble
  \fi
  {#1}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\parlongformat}
% \begin{macro}{\parshortformat}
% \begin{macro}{\parnumericformat}
% \begin{macro}{\sentencelongformat}
% \begin{macro}{\sentenceshortformat}
% \begin{macro}{\sentencenumericformat}
% Formatierung in den sechs Formen.
%    \begin{macrocode}
\newcommand*{\parlongformat}[1]{\parname~#1}
\newcommand*{\parshortformat}[1]{\parshortname~#1}
\newcommand*{\parnumericformat}[1]{\@Roman{\number #1\relax}}
\newcommand*{\sentencelongformat}[1]{\sentencename~#1}
\newcommand*{\sentenceshortformat}[1]{\sentenceshortname~#1}
\newcommand*{\sentencenumericformat}[1]{\@arabic{\number #1\relax}.}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\parname}
% \begin{macro}{\parshortname}
% \begin{macro}{\sentencename}
% \begin{macro}{\sentenceshortname}
% \begin{macro}{\scrjura@lang@error}
% Der Name eines Absatzes und eines Satzes.
%    \begin{macrocode}
\newcommand*{\parname}{Paragraph}
\AtBeginDocument{%
  \providecaptionname{german}\parname{Absatz}%
  \providecaptionname{german}\parshortname{Abs.}%
  \providecaptionname{german}\sentencename{Satz}%
  \providecaptionname{german}\sentenceshortname{S.}%
  \providecaptionname{ngerman}\parname{Absatz}%
  \providecaptionname{ngerman}\parshortname{Abs.}%
  \providecaptionname{ngerman}\sentencename{Satz}%
  \providecaptionname{ngerman}\sentenceshortname{S.}%
  \providecaptionname{austrian}\parname{Absatz}%
  \providecaptionname{austrian}\parshortname{Abs.}%
  \providecaptionname{austrian}\sentencename{Satz}%
  \providecaptionname{austrian}\sentenceshortname{S.}%
  \providecaptionname{naustrian}\parname{Absatz}%
  \providecaptionname{naustrian}\parshortname{Abs.}%
  \providecaptionname{naustrian}\sentencename{Satz}%
  \providecaptionname{naustrian}\sentenceshortname{S.}%
}
\providecommand*{\parname}{\scrjura@lang@error{\parname}}
\providecommand*{\parshortname}{\scrjura@lang@error{\parshortname}}
\providecommand*{\sentencename}{\scrjura@lang@error{\sentencename}}
\providecommand*{\sentenceshortname}{\scrjura@lang@error{\sentenceshortname}}
\newcommand*{\scrjura@lang@error}[1]{%
  \PackageErrorNoLine{scrjura}{%
    current language not supported%
  }{%
    Currently scrjura only supports languages `german',
    `ngerman', `austrian', and `naustrian'.\MessageBreak
    It seems, that you are using another language (maybe
    \languagename).\MessageBreak
    Because of this you have to define \string#1\space by
    yourself!\MessageBreak
    It would be nice if you'll send your definitions to the author.%
  }%
  \textbf{??}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\newmaxpar}
% \begin{macro}{\getmaxpar}
%   \changes{v0.6}{2011/09/30}{Argument 3 muss mit \cs{protected@edef}
%     expandiert werden}
%   \changes{v0.5c}{2010/04/26}{\cs{protected@edef} durch \cs{edef} ersetzt}
%   \changes{v0.5c}{2010/04/26}{\cs{\#2@Paragraphformat} expandiert zu seinem
%     Argument}
% Noch zwei Hilfsmakros, um Zähler in der aux-Datei zwischenzuspeichern und
% auch dann Werte zu holen, wenn sie nicht in der aux-Datei stehen.
%    \begin{macrocode}
\newcommand*{\newmaxpar}[3]{%
  \begingroup
    \protected@edef\@tempa{#2}\@onelevel@sanitize\@tempa
    \expandafter\xdef\csname max@#1@\@tempa\endcsname{#3}%
  \endgroup
}
\newcommand*{\getmaxpar}[3]{%
  \begingroup
    \expandafter\let\csname #2@Paragraphformat\endcsname\@firstofone
    \protected@edef\@tempa{#3}%
    \@onelevel@sanitize\@tempa
    \expandafter\ifx \csname max@#2@\@tempa\endcsname\relax
      \edef\@tempa{\endgroup\edef\noexpand#1{\expandafter\the\value{par}}}%
    \else
      \edef\@tempa{\endgroup
        \edef\noexpand#1{\csname max@#2@\@tempa\endcsname}}%
    \fi
  \@tempa
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \iffalse
%</package>
% \fi
%
% \Finale
%
\endinput
%
% end of file `scrjura.dtx'
%%% Local Variables:
%%% mode: doctex
%%% coding: iso-latin-1
%%% TeX-master: t
%%% End:
