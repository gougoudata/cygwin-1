$Id: README,v 1.1.1.1 2012-12-18 14:06:55 jt Exp $

Abstract:

This is the README for the Cygwin Python distribution.

Python is an interpreted, interactive, object-oriented programming
language often compared to Tcl, Perl, Scheme or Java. Python includes
modules, classes, exceptions, very high level dynamic data types and
dynamic typing. Python supports interfaces to many system calls and
libraries, as well as to various windowing systems (X11, Motif, Tk,
Mac and MFC).

As of Cygwin Python 2.6.7-1, the port is built against Unix X11 Tcl/Tk
whereas all previous releases were built against Win32 GDI Tcl/Tk.  This
change only affects GUI components like tkinter and idle.

As of Cygwin Python 2.5.5-1, the port is built against Cygwin 1.7 using
cygport and has been split into multiple packages.  Many thanks to
Yaakov Selkowitz for the cygport build system and his Python cygport
script and patches.

As of Cygwin Python 2.4.3-1, the port has pthread-related issues that
cause some threading features to fail (at least occassionally).  AFAICT,
this is due to a change in the Cygwin DLL some time after 1.5.18.  See
the test section for more details.

As of Cygwin Python 2.3.3-2, all known 64-bit I/O issues have been
resolved.

As of Cygwin Python 2.2.2-3, it is assumed that your Cygwin system has
been rebased in order to prevent fork() failures due to DLL base address
conflicts.  Previous versions worked around this issue by building the
_socket module statically.  This hack no longer works with current
Cygwin versions.  See the issues section for more details.

As of Cygwin Python 2.2.1-1, the port supports threading.  Many thanks
to Rob Collins (and others) who enhanced Cygwin's pthreads support to
the level needed by Python.

Additionally, the package now includes the HTML version of the full Python
documentation.

As of Cygwin Python 2.1.1-2, the port is essentially complete (at least
for Windows NT 4.0 and 2000).  The most notable changes are the addition
of the _tkinter module and the elimination of the test_poll hang.

As of Cygwin Python 2.1, the port is built with a DLL core very similar
to how the Win32 port is built.  This enables Cygwin Python to support
building shared extensions with the traditional Misc/Makefile.pre.in
and the newer distutils methods.

Requirements:

The following packages or later are required to run Cygwin Python:

    crypt-1.2-1
    cygwin-1.7.16-1
    libbz2_1-1.0.6-2
    libdb4.5-4.5.20.2-3
    libexpat1-2.1.0-1
    libffi4-4.5.3-3
    libgcc1-4.5.3-3
    libgdbm4-1.8.3-20
    libintl8-0.18.1.1-2
    libncursesw10-5.7-18
    libopenssl100-1.0.1c-2
    libreadline7-6.1.2-3
    libsqlite3_0-3.7.3-1
    libX11_6-1.5.0-1
    tcl-8.5.11-1
    tcl-tk-8.5.11-1
    tcl-tix-8.4.3-2
    zlib0-1.2.7-1

The following packages or later are required to build Cygwin Python:

    (corresponding -devel packages to the above runtime packages)
    autoconf2.5-2.69-1
    binutils-2.22.51-2
    cygport-0.11.2-1
    gawk-4.0.1-1
    gcc4-core-4.5.3-3
    make-3.82.90-1
    sed-4.2.1-2

Install:

Cygwin Python does not require any special installation procedures.
However, _tkinter users should see the issues section.

Source:

As configured, the Python source essentially builds OOTB under Cygwin.
However, the following patches have been applied:

    2.5.2-ctypes-util-find_library.patch
    2.5.2-tkinter-x11.patch
    2.6.2-ssl-threads.patch
    2.6.5-FD_SETSIZE.patch
    2.6.5-export-PySignal_SetWakeupFd.patch
    2.6.5-ncurses-abi6.patch
    2.6.5-system-libffi.patch
    2.7.3-dbm.patch
    2.7.3-dylib.patch
    2.7.3-getpath-exe-extension.patch
    2.7.3-io.patch
    2.7.3-no-libm.patch

Build:

The following are the build instructions:

1. Change directory to where the source package is located.  If Cygwin's
setup.exe was used to install it, then the directory will be /usr/src.

   $ cd /usr/src

2. Unpack the source package

   $ tar -xf python-${version}-src.tar.bz2

3. Build the binary package

   $ cygport python-${version}.cygport all

Note that "${version}" above should be replace with the actual version,
for example, 2.5.5-10.

Test:

Under XP Pro SP2, Cygwin 1.5.24-2, ntsec, and NTFS, Cygwin Python passes
most normal (i.e., non "-u" option) tests.  Unfortunately, some of the
threading-related tests can cause the regression test to abort without
any error messages.  If one excludes these tests, then the regression
test will run to completion.  Additionally, if these tests are run
individually, then they will pass.

Issues:

The following are the known Cygwin Python issues:

1. Due to issues with Cygwin's fork() and DLL base address conflicts,
one should rebase their Cygwin system to prevent fork() failures.  Use
the following procedure to rebase your system:

    a. install the Cygwin rebase package (if necessary)
    b. shutdown all Cygwin processes and services
    c. start ash or dash (do not use bash, rxvt, mintty, etc.)
    d. execute /bin/rebaseall (in the ash/dash window)

Homepage:

The primary Python web site is:

    http://www.python.org/

Download:

The primary Python ftp site is:

    ftp://ftp.python.org/pub/python/

Mailing Lists:

Please report problems, suggestions, etc. dependent on their nature to
one of the following:

    python-list@python.org
    cygwin@cygwin.com

Maintainer:

    Jason Tishler <jason@tishler.net>
